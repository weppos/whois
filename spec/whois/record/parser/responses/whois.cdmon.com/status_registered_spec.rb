# encoding: utf-8

# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   /spec/fixtures/responses/whois.cdmon.com/status_registered.expected
#
# and regenerate the tests with the following rake task
#
#   $ rake spec:generate
#

require 'spec_helper'
require 'whois/record/parser/whois.cdmon.com.rb'

describe Whois::Record::Parser::WhoisCdmonCom, "status_registered.expected" do

  subject do
    file = fixture("responses", "whois.cdmon.com/status_registered.txt")
    part = Whois::Record::Part.new(body: File.read(file))
    described_class.new(part)
  end

  describe "#status" do
    it do
      expect(subject.status).to eq(:registered)
    end
  end
  describe "#available?" do
    it do
      expect(subject.available?).to eq(false)
    end
  end
  describe "#registered?" do
    it do
      expect(subject.registered?).to eq(true)
    end
  end
  describe "#created_on" do
    it do
      expect(subject.created_on).to be_a(Time)
      expect(subject.created_on).to eq(Time.parse("2001-08-12T15:02:57Z"))
    end
  end
  describe "#updated_on" do
    it do
      expect(subject.updated_on).to be_a(Time)
      expect(subject.updated_on).to eq(Time.parse("2009-12-16T11:40:44Z"))
    end
  end
  describe "#expires_on" do
    it do
      expect(subject.expires_on).to be_a(Time)
      expect(subject.expires_on).to eq(Time.parse("2024-08-12T15:02:53Z"))
    end
  end
  describe "#registrar" do
    it do
      expect(subject.registrar).to be_a(Whois::Record::Registrar)
      expect(subject.registrar.id).to eq("1403")
      expect(subject.registrar.name).to eq("10DENCEHISPAHARD, S.L")
      expect(subject.registrar.organization).to eq("10DENCEHISPAHARD, S.L")
      expect(subject.registrar.url).to eq("https://www.cdmon.com")
    end
  end
  describe "#registrant_contacts" do
    it do
      expect(subject.registrant_contacts).to be_a(Array)
      expect(subject.registrant_contacts.size).to eq(1)
      expect(subject.registrant_contacts[0]).to be_a(Whois::Record::Contact)
      expect(subject.registrant_contacts[0].type).to eq(Whois::Record::Contact::TYPE_REGISTRANT)
      expect(subject.registrant_contacts[0].name).to eq("10dencehispahard,s.l.")
      expect(subject.registrant_contacts[0].organization).to eq("10dencehispahard,s.l.")
      expect(subject.registrant_contacts[0].address).to eq("Girona 81-83 local 6")
      expect(subject.registrant_contacts[0].city).to eq("Malgrat de Mar")
      expect(subject.registrant_contacts[0].zip).to eq("08380")
      expect(subject.registrant_contacts[0].country_code).to eq("ES")
      expect(subject.registrant_contacts[0].phone).to eq("+34.902364138")
      expect(subject.registrant_contacts[0].email).to eq("info@cdmon.com")
    end
  end
  describe "#admin_contacts" do
    it do
      expect(subject.admin_contacts).to be_a(Array)
      expect(subject.admin_contacts.size).to eq(1)
      expect(subject.admin_contacts[0]).to be_a(Whois::Record::Contact)
      expect(subject.admin_contacts[0].type).to eq(Whois::Record::Contact::TYPE_ADMINISTRATIVE)
      expect(subject.admin_contacts[0].name).to eq("10dencehispahard,s.l.")
      expect(subject.admin_contacts[0].organization).to eq("10dencehispahard,s.l.")
      expect(subject.admin_contacts[0].address).to eq("Girona 81-83 local 6")
      expect(subject.admin_contacts[0].city).to eq("Malgrat de Mar")
      expect(subject.admin_contacts[0].zip).to eq("08380")
      expect(subject.admin_contacts[0].country_code).to eq("ES")
      expect(subject.admin_contacts[0].phone).to eq("+34.902364138")
      expect(subject.admin_contacts[0].email).to eq("info@cdmon.com")
    end
  end
  describe "#technical_contacts" do
    it do
      expect(subject.technical_contacts).to be_a(Array)
      expect(subject.technical_contacts.size).to eq(1)
      expect(subject.technical_contacts[0]).to be_a(Whois::Record::Contact)
      expect(subject.technical_contacts[0].type).to eq(Whois::Record::Contact::TYPE_TECHNICAL)
      expect(subject.technical_contacts[0].name).to eq("10dencehispahard,s.l.")
      expect(subject.technical_contacts[0].organization).to eq("10dencehispahard,s.l.")
      expect(subject.technical_contacts[0].address).to eq("Girona 81-83 local 6")
      expect(subject.technical_contacts[0].city).to eq("Malgrat de Mar")
      expect(subject.technical_contacts[0].zip).to eq("08380")
      expect(subject.technical_contacts[0].country_code).to eq("ES")
      expect(subject.technical_contacts[0].phone).to eq("+34.902364138")
      expect(subject.technical_contacts[0].email).to eq("info@cdmon.com")
    end
  end
  describe "#nameservers" do
    it do
      expect(subject.nameservers).to be_a(Array)
      expect(subject.nameservers.size).to eq(3)
      expect(subject.nameservers[0]).to be_a(Whois::Record::Nameserver)
      expect(subject.nameservers[0].name).to eq("ns2.cdmon.es")
      expect(subject.nameservers[1]).to be_a(Whois::Record::Nameserver)
      expect(subject.nameservers[1].name).to eq("ns3.cdmon.es")
      expect(subject.nameservers[2]).to be_a(Whois::Record::Nameserver)
      expect(subject.nameservers[2].name).to eq("ns1.cdmon.es")
 
    end
  end
end