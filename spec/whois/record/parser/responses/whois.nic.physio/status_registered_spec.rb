# encoding: utf-8

# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   /spec/fixtures/responses/whois.nic.physio/status_registered.expected
#
# and regenerate the tests with the following rake task
#
#   $ rake spec:generate
#

require 'spec_helper'
require 'whois/record/parser/whois.nic.physio.rb'

describe Whois::Record::Parser::WhoisNicPhysio, "status_registered.expected" do

  subject do
    file = fixture("responses", "whois.nic.physio/status_registered.txt")
    part = Whois::Record::Part.new(body: File.read(file))
    described_class.new(part)
  end

  describe "#disclaimer" do
    it do
      expect(subject.disclaimer).to eq("We may discontinue or amend any part or the whole of these Terms of Service from time to time at our absolute discretion.")
    end
  end
  describe "#domain" do
    it do
      expect(subject.domain).to eq("nic.physio")
    end
  end
  describe "#domain_id" do
    it do
      expect(subject.domain_id).to eq("DFC3E2BC459584A369B6D0C32199B03F8-ARI")
    end
  end
  describe "#status" do
    it do
      expect(subject.status).to eq(["ok http://www.icann.org/epp#OK", "autoRenewPeriod http://www.icann.org/epp#autoRenewPeriod"])
    end
  end
  describe "#available?" do
    it do
      expect(subject.available?).to eq(false)
    end
  end
  describe "#registered?" do
    it do
      expect(subject.registered?).to eq(true)
    end
  end
  describe "#created_on" do
    it do
      expect(subject.created_on).to be_a(Time)
      expect(subject.created_on).to eq(Time.parse("2014-06-04 02:32:22 UTC"))
    end
  end
  describe "#updated_on" do
    it do
      expect(subject.updated_on).to be_a(Time)
      expect(subject.updated_on).to eq(Time.parse("2015-05-28 06:46:19 UTC"))
    end
  end
  describe "#expires_on" do
    it do
      expect(subject.expires_on).to be_a(Time)
      expect(subject.expires_on).to eq(Time.parse("2016-06-04 02:32:22 UTC"))
    end
  end
  describe "#registrar" do
    it do
      expect(subject.registrar).to be_a(Whois::Record::Registrar)
      expect(subject.registrar.id).to eq("9999")
      expect(subject.registrar.name).to eq("dotPhysio Registry-Registrar")
      expect(subject.registrar.organization).to eq(nil)
      expect(subject.registrar.url).to eq(nil)
    end
  end
  describe "#registrant_contacts" do
    it do
      expect(subject.registrant_contacts).to be_a(Array)
      expect(subject.registrant_contacts.size).to eq(1)
      expect(subject.registrant_contacts[0]).to be_a(Whois::Record::Contact)
      expect(subject.registrant_contacts[0].type).to eq(Whois::Record::Contact::TYPE_REGISTRANT)
      expect(subject.registrant_contacts[0].id).to eq("C947D1B02EE2B4B7B85D4CBB89BA90EA2-ARI")
      expect(subject.registrant_contacts[0].name).to eq("Phys Biz Pty Ltd")
      expect(subject.registrant_contacts[0].organization).to eq("")
      expect(subject.registrant_contacts[0].address).to eq("88, Rosedale Street")
      expect(subject.registrant_contacts[0].city).to eq("Floreat")
      expect(subject.registrant_contacts[0].zip).to eq("6014")
      expect(subject.registrant_contacts[0].state).to eq("WA")
      expect(subject.registrant_contacts[0].country).to eq(nil)
      expect(subject.registrant_contacts[0].country_code).to eq("au")
      expect(subject.registrant_contacts[0].phone).to eq("+61.892849684")
      expect(subject.registrant_contacts[0].fax).to eq("")
      expect(subject.registrant_contacts[0].email).to eq("enquiries@registry.physio")
    end
  end
  describe "#admin_contacts" do
    it do
      expect(subject.admin_contacts).to be_a(Array)
      expect(subject.admin_contacts.size).to eq(1)
      expect(subject.admin_contacts[0]).to be_a(Whois::Record::Contact)
      expect(subject.admin_contacts[0].type).to eq(Whois::Record::Contact::TYPE_ADMINISTRATIVE)
      expect(subject.admin_contacts[0].id).to eq("C947D1B02EE2B4B7B85D4CBB89BA90EA2-ARI")
      expect(subject.admin_contacts[0].name).to eq("Phys Biz Pty Ltd")
      expect(subject.admin_contacts[0].organization).to eq("")
      expect(subject.admin_contacts[0].address).to eq("88, Rosedale Street")
      expect(subject.admin_contacts[0].city).to eq("Floreat")
      expect(subject.admin_contacts[0].zip).to eq("6014")
      expect(subject.admin_contacts[0].state).to eq("WA")
      expect(subject.admin_contacts[0].country).to eq(nil)
      expect(subject.admin_contacts[0].country_code).to eq("au")
      expect(subject.admin_contacts[0].phone).to eq("+61.892849684")
      expect(subject.admin_contacts[0].fax).to eq("")
      expect(subject.admin_contacts[0].email).to eq("enquiries@registry.physio")
    end
  end
  describe "#technical_contacts" do
    it do
      expect(subject.technical_contacts).to be_a(Array)
      expect(subject.technical_contacts.size).to eq(1)
      expect(subject.technical_contacts[0]).to be_a(Whois::Record::Contact)
      expect(subject.technical_contacts[0].type).to eq(Whois::Record::Contact::TYPE_TECHNICAL)
      expect(subject.technical_contacts[0].id).to eq("C947D1B02EE2B4B7B85D4CBB89BA90EA2-ARI")
      expect(subject.technical_contacts[0].name).to eq("Phys Biz Pty Ltd")
      expect(subject.technical_contacts[0].organization).to eq("")
      expect(subject.technical_contacts[0].address).to eq("88, Rosedale Street")
      expect(subject.technical_contacts[0].city).to eq("Floreat")
      expect(subject.technical_contacts[0].zip).to eq("6014")
      expect(subject.technical_contacts[0].state).to eq("WA")
      expect(subject.technical_contacts[0].country).to eq(nil)
      expect(subject.technical_contacts[0].country_code).to eq("au")
      expect(subject.technical_contacts[0].phone).to eq("+61.892849684")
      expect(subject.technical_contacts[0].fax).to eq("")
      expect(subject.technical_contacts[0].email).to eq("enquiries@registry.physio")
    end
  end
  describe "#nameservers" do
    it do
      expect(subject.nameservers).to be_a(Array)
      expect(subject.nameservers.size).to eq(4)
      expect(subject.nameservers[0]).to be_a(Whois::Record::Nameserver)
      expect(subject.nameservers[0].name).to eq("d.nic.physio")
      expect(subject.nameservers[0].ipv4).to eq(nil)
      expect(subject.nameservers[0].ipv6).to eq(nil)
      expect(subject.nameservers[1]).to be_a(Whois::Record::Nameserver)
      expect(subject.nameservers[1].name).to eq("b.nic.physio")
      expect(subject.nameservers[1].ipv4).to eq(nil)
      expect(subject.nameservers[1].ipv6).to eq(nil)
      expect(subject.nameservers[2]).to be_a(Whois::Record::Nameserver)
      expect(subject.nameservers[2].name).to eq("c.nic.physio")
      expect(subject.nameservers[2].ipv4).to eq(nil)
      expect(subject.nameservers[2].ipv6).to eq(nil)
      expect(subject.nameservers[3]).to be_a(Whois::Record::Nameserver)
      expect(subject.nameservers[3].name).to eq("a.nic.physio")
      expect(subject.nameservers[3].ipv4).to eq(nil)
      expect(subject.nameservers[3].ipv6).to eq(nil)
    end
  end
end
