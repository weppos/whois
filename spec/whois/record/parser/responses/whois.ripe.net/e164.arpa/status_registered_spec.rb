# encoding: utf-8

# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   /spec/fixtures/responses/whois.ripe.net/e164.arpa/status_registered.expected
#
# and regenerate the tests with the following rake task
#
#   $ rake spec:generate
#

require 'spec_helper'
require 'whois/record/parser/whois.ripe.net.rb'

describe Whois::Record::Parser::WhoisRipeNet, "status_registered.expected" do

  subject do
    file = fixture("responses", "whois.ripe.net/e164.arpa/status_registered.txt")
    part = Whois::Record::Part.new(body: File.read(file))
    described_class.new(part)
  end

  describe "#status" do
    it do
      expect(subject.status).to eq(:registered)
    end
  end
  describe "#available?" do
    it do
      expect(subject.available?).to eq(false)
    end
  end
  describe "#registered?" do
    it do
      expect(subject.registered?).to eq(true)
    end
  end
  describe "#created_on" do
    it do
      expect { subject.created_on }.to raise_error(Whois::AttributeNotSupported)
    end
  end
  describe "#updated_on" do
    it do
      expect { subject.updated_on }.to raise_error(Whois::AttributeNotSupported)
    end
  end
  describe "#expires_on" do
    it do
      expect { subject.expires_on }.to raise_error(Whois::AttributeNotSupported)
    end
  end
  describe "#nameservers" do
    it do
      expect(subject.nameservers).to be_a(Array)
      expect(subject.nameservers.size).to eq(2)
      expect(subject.nameservers[0]).to be_a(Whois::Record::Nameserver)
      expect(subject.nameservers[0].name).to eq("ns1.sidn.nl")
      expect(subject.nameservers[1]).to be_a(Whois::Record::Nameserver)
      expect(subject.nameservers[1].name).to eq("ns2.sidn.nl")
    end
  end
  describe "#domain_handle" do
    it do
      expect(subject.domain_handle).to be_a(Array)
      expect(subject.domain_handle.size).to eq(1)
      expect(subject.domain_handle[0]).to be_a(Whois::Record::Handle)
      expect(subject.domain_handle[0].admin_c).to eq('md6066-ripe')
      expect(subject.domain_handle[0].created).to eq('2002-08-28t15:58:29z')
      expect(subject.domain_handle[0].descr).to eq('stichting enum nederland')
      expect(subject.domain_handle[0].domain).to eq('1.3.e164.arpa')
      expect(subject.domain_handle[0].ds_rdata).to be_a(Array)
      expect(subject.domain_handle[0].ds_rdata[0]).to eq('3931 8 1 3527240dde1c239a9f53e39d3b8cda478f1c040e')
      expect(subject.domain_handle[0].ds_rdata[1]).to eq('3931 8 2 8113890c1e9880620845fecfc4ceeacceffd9351f0cacbbcd8525fd7211c8308')
      expect(subject.domain_handle[0].format).to eq('rpsl')
      expect(subject.domain_handle[0].handle_type).to eq('domain')
      expect(subject.domain_handle[0].last_modified).to eq('2013-10-31t13:35:10z')
      expect(subject.domain_handle[0].mnt_by).to eq('enum-nl-mnt')
      expect(subject.domain_handle[0].nserver).to be_a(Array)
      expect(subject.domain_handle[0].nserver[0]).to eq('ns1.sidn.nl')
      expect(subject.domain_handle[0].nserver[1]).to eq('ns2.sidn.nl')
      expect(subject.domain_handle[0].org).to eq('org-sen3-ripe')
      expect(subject.domain_handle[0].source).to eq('ripe # filtered')
      expect(subject.domain_handle[0].tech_c).to eq('ent6-ripe')
      expect(subject.domain_handle[0].zone_c).to eq('ent6-ripe')
    end
  end
  describe "#person_handle" do
    it do
      expect(subject.person_handle).to be_a(Array)
      expect(subject.person_handle.size).to eq(1)
      expect(subject.person_handle[0]).to be_a(Whois::Record::Handle)
      expect(subject.person_handle[0].address).to be_a(Array)
      expect(subject.person_handle[0].address[0]).to eq('stichting enum nederland')
      expect(subject.person_handle[0].address[1]).to eq('utrechtseweg 310')
      expect(subject.person_handle[0].address[2]).to eq('po box 5022')
      expect(subject.person_handle[0].address[3]).to eq('6802 ea arnhem')
      expect(subject.person_handle[0].address[4]).to eq('the netherlands')
      expect(subject.person_handle[0].created).to eq('2006-08-31t12:44:01z')
      expect(subject.person_handle[0].fax_no).to eq('+31 26 3525577')
      expect(subject.person_handle[0].format).to eq('rpsl')
      expect(subject.person_handle[0].handle_type).to eq('person')
      expect(subject.person_handle[0].last_modified).to eq('2006-08-31t13:15:24z')
      expect(subject.person_handle[0].mnt_by).to eq('enum-nl-mnt')
      expect(subject.person_handle[0].nic_hdl).to eq('md6066-ripe')
      expect(subject.person_handle[0].person).to eq('managing director')
      expect(subject.person_handle[0].phone).to eq('+31 26 3525576')
      expect(subject.person_handle[0].source).to eq('ripe # filtered')
    end
  end
  describe "#organisation_handle" do
    it do
      expect(subject.organisation_handle).to be_a(Array)
      expect(subject.organisation_handle.size).to eq(1)
      expect(subject.organisation_handle[0]).to be_a(Whois::Record::Handle)
      expect(subject.organisation_handle[0].address[0]).to eq('meander 501')
      expect(subject.organisation_handle[0].address[1]).to eq('po box 5022')
      expect(subject.organisation_handle[0].address[2]).to eq('6802 ea arnhem')
      expect(subject.organisation_handle[0].address[3]).to eq('the netherlands')
      expect(subject.organisation_handle[0].created).to eq('2006-08-31t13:30:22z')
      expect(subject.organisation_handle[0].format).to eq('rpsl')
      expect(subject.organisation_handle[0].handle_type).to eq('organisation')
      expect(subject.organisation_handle[0].last_modified).to eq('2012-02-07t14:54:42z')
      expect(subject.organisation_handle[0].mnt_by).to eq('enum-nl-mnt')
      expect(subject.organisation_handle[0].mnt_ref).to eq('enum-nl-mnt')
      expect(subject.organisation_handle[0].org_name).to eq('stichting enum nederland')
      expect(subject.organisation_handle[0].org_type).to eq('other')
      expect(subject.organisation_handle[0].organisation).to eq('org-sen3-ripe')
      expect(subject.organisation_handle[0].source).to eq('ripe # filtered')
    end
  end
  describe "#role_handle" do
    it do
      expect(subject.role_handle).to be_a(Array)
      expect(subject.role_handle.size).to eq(1)
      expect(subject.role_handle[0]).to be_a(Whois::Record::Handle)
      expect(subject.role_handle[0].address).to be_a(Array)
      expect(subject.role_handle[0].address[0]).to eq('stichting enum nederland')
      expect(subject.role_handle[0].address[1]).to eq('meander 501')
      expect(subject.role_handle[0].address[2]).to eq('po box 5022')
      expect(subject.role_handle[0].address[3]).to eq('6802 ea arnhem')
      expect(subject.role_handle[0].address[4]).to eq('the netherlands')
      expect(subject.role_handle[0].admin_c).to eq('em3116-ripe')
      expect(subject.role_handle[0].created).to eq('2006-08-31t12:55:45z')
      expect(subject.role_handle[0].fax_no).to eq('+31 26 3525577')
      expect(subject.role_handle[0].format).to eq('rpsl')
      expect(subject.role_handle[0].handle_type).to eq('role')
      expect(subject.role_handle[0].last_modified).to eq('2015-02-20t10:52:27z')
      expect(subject.role_handle[0].mnt_by).to eq('enum-nl-mnt')
      expect(subject.role_handle[0].nic_hdl).to eq('ent6-ripe')
      expect(subject.role_handle[0].phone).to eq('+31 26 3525576')
      expect(subject.role_handle[0].role).to eq('enum nl tech')
      expect(subject.role_handle[0].source).to eq('ripe # filtered')
      expect(subject.role_handle[0].tech_c).to eq('mg2054-ripe')
    end
  end
  describe "#maintainer_handle" do
    it do
      expect(subject.maintainer_handle).to be_a(Array)
      expect(subject.maintainer_handle.size).to eq(0)
    end
  end
end
