# encoding: utf-8

# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   /spec/fixtures/responses/whois.ripe.net/person_handle/status_registered.expected
#
# and regenerate the tests with the following rake task
#
#   $ rake spec:generate
#

require 'spec_helper'
require 'whois/record/parser/whois.ripe.net.rb'

describe Whois::Record::Parser::WhoisRipeNet, "status_registered.expected" do

  subject do
    file = fixture("responses", "whois.ripe.net/person_handle/status_registered.txt")
    part = Whois::Record::Part.new(body: File.read(file))
    described_class.new(part)
  end

  describe "#status" do
    it do
      expect(subject.status).to eq(:registered)
    end
  end
  describe "#available?" do
    it do
      expect(subject.available?).to eq(false)
    end
  end
  describe "#registered?" do
    it do
      expect(subject.registered?).to eq(true)
    end
  end
  describe "#created_on" do
    it do
      expect { subject.created_on }.to raise_error(Whois::AttributeNotSupported)
    end
  end
  describe "#updated_on" do
    it do
      expect { subject.updated_on }.to raise_error(Whois::AttributeNotSupported)
    end
  end
  describe "#expires_on" do
    it do
      expect { subject.expires_on }.to raise_error(Whois::AttributeNotSupported)
    end
  end
  describe "#nameservers" do
    it do
      expect(subject.nameservers).to be_a(Array)
      expect(subject.nameservers.size).to eq(0)
    end
  end
  describe "#person_handle" do
    it do
      expect(subject.person_handle).to be_a(Array)
      expect(subject.person_handle.size).to eq(1)
      expect(subject.person_handle[0]).to be_a(Whois::Record::Handle)
      expect(subject.person_handle[0].abuse_mailbox).to eq('abuse@hetzner.de')
      expect(subject.person_handle[0].address).to be_a(Array)
      expect(subject.person_handle[0].address[0]).to eq('hetzner online ag')
      expect(subject.person_handle[0].address[1]).to eq('industriestrasse 25')
      expect(subject.person_handle[0].address[2]).to eq('d-91710 gunzenhausen')
      expect(subject.person_handle[0].address[3]).to eq('germany')
      expect(subject.person_handle[0].created).to eq('2004-08-03t08:57:54z')
      expect(subject.person_handle[0].fax_no).to eq('+4998315053')
      expect(subject.person_handle[0].format).to eq('rpsl')
      expect(subject.person_handle[0].handle_type).to eq('person')
      expect(subject.person_handle[0].last_modified).to eq('2015-07-17t12:50:22z')
      expect(subject.person_handle[0].mnt_by).to eq('hos-gun')
      expect(subject.person_handle[0].nic_hdl).to eq('sk2374-ripe')
      expect(subject.person_handle[0].phone).to eq('+4998315050')
      expect(subject.person_handle[0].person).to eq('stephan konvickova')
      expect(subject.person_handle[0].remarks).to be_a(Array)
      expect(subject.person_handle[0].remarks[0]).to eq('*************************************************')
      expect(subject.person_handle[0].remarks[1]).to eq('* for spam/abuse/security issues please contact *')
      expect(subject.person_handle[0].remarks[2]).to eq('* abuse@hetzner.de ,  not  this  address        *')
      expect(subject.person_handle[0].remarks[3]).to eq('*************************************************')
      expect(subject.person_handle[0].source).to eq('ripe # filtered')
    end
  end
end
