# encoding: utf-8

# This file is autogenerated. Do not edit it manually.
# If you want change the content of this file, edit
#
#   /spec/fixtures/responses/whois.networking4all.com/status_registered.expected
#
# and regenerate the tests with the following rake task
#
#   $ rake spec:generate
#

require 'spec_helper'
require 'whois/record/parser/whois.networking4all.com.rb'

describe Whois::Record::Parser::WhoisNetworking4allCom, "status_registered.expected" do

  subject do
    file = fixture("responses", "whois.networking4all.com/status_registered.txt")
    part = Whois::Record::Part.new(body: File.read(file))
    described_class.new(part)
  end

  describe "#created_on" do
    it do
      expect(subject.created_on).to eq(Time.parse("Fri  3 Feb 2012"))
    end
  end
  describe "#updated_on" do
    it do
      expect(subject.updated_on).to eq(Time.parse("Sun 17 May 2015"))
    end
  end
  describe "#expires_on" do
    it do
      expect(subject.expires_on).to eq(Time.parse("Tue 29 Dec 2015"))
    end
  end
  describe "#registrant_contacts" do
    it do
      expect(subject.registrant_contacts).to be_a(Array)
      expect(subject.registrant_contacts.size).to eq(1)
      expect(subject.registrant_contacts[0]).to be_a(Whois::Record::Contact)
      expect(subject.registrant_contacts[0].type).to eq(Whois::Record::Contact::TYPE_REGISTRANT)
      expect(subject.registrant_contacts[0].id).to eq("CLI-299346")
      expect(subject.registrant_contacts[0].name).to eq("WGCZ s.r.o.")
      expect(subject.registrant_contacts[0].organization).to eq("")
      expect(subject.registrant_contacts[0].address).to eq("Krakovska 25")
      expect(subject.registrant_contacts[0].city).to eq("Praha 1")
      expect(subject.registrant_contacts[0].zip).to eq("11000")
      expect(subject.registrant_contacts[0].state).to eq("Praha")
      expect(subject.registrant_contacts[0].country).to eq("CZ")
      expect(subject.registrant_contacts[0].country_code).to eq(nil)
      expect(subject.registrant_contacts[0].phone).to eq("+420.222220348")
      expect(subject.registrant_contacts[0].fax).to eq("")
      expect(subject.registrant_contacts[0].email).to eq("domain.wgcz@webgroup-limited.com")
    end
  end
  describe "#admin_contacts" do
    it do
      expect(subject.admin_contacts).to be_a(Array)
      expect(subject.admin_contacts.size).to eq(1)
      expect(subject.admin_contacts[0]).to be_a(Whois::Record::Contact)
      expect(subject.admin_contacts[0].type).to eq(Whois::Record::Contact::TYPE_ADMINISTRATIVE)
      expect(subject.admin_contacts[0].id).to eq("CLN-158584")
      expect(subject.admin_contacts[0].name).to eq("WGCZ s.r.o. WGCZ")
      expect(subject.admin_contacts[0].organization).to eq("")
      expect(subject.admin_contacts[0].address).to eq("Krakovska 1366/25")
      expect(subject.admin_contacts[0].city).to eq("Praha 1")
      expect(subject.admin_contacts[0].zip).to eq("110 00")
      expect(subject.admin_contacts[0].state).to eq("Praha")
      expect(subject.admin_contacts[0].country).to eq("CZ")
      expect(subject.admin_contacts[0].country_code).to eq(nil)
      expect(subject.admin_contacts[0].phone).to eq("+420.222220348")
      expect(subject.admin_contacts[0].fax).to eq("")
      expect(subject.admin_contacts[0].email).to eq("domain.wgcz@webgroup-limited.com")
    end
  end
  describe "#technical_contacts" do
    it do
      expect(subject.technical_contacts).to be_a(Array)
      expect(subject.technical_contacts.size).to eq(1)
      expect(subject.technical_contacts[0]).to be_a(Whois::Record::Contact)
      expect(subject.technical_contacts[0].type).to eq(Whois::Record::Contact::TYPE_TECHNICAL)
      expect(subject.technical_contacts[0].id).to eq("CLN-158584")
      expect(subject.technical_contacts[0].name).to eq("WGCZ s.r.o. WGCZ")
      expect(subject.technical_contacts[0].organization).to eq("")
      expect(subject.technical_contacts[0].address).to eq("Krakovska 1366/25")
      expect(subject.technical_contacts[0].city).to eq("Praha 1")
      expect(subject.technical_contacts[0].zip).to eq("110 00")
      expect(subject.technical_contacts[0].state).to eq("Praha")
      expect(subject.technical_contacts[0].country).to eq("CZ")
      expect(subject.technical_contacts[0].country_code).to eq(nil)
      expect(subject.technical_contacts[0].phone).to eq("+420.222220348")
      expect(subject.technical_contacts[0].fax).to eq("")
      expect(subject.technical_contacts[0].email).to eq("domain.wgcz@webgroup-limited.com")
    end
  end
end
