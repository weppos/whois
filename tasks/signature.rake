require 'fileutils'

namespace :signature do

  _ROOT_DIR = File.expand_path("../../", __FILE__)
  _TARGET_DIR    = File.join(_ROOT_DIR, %w( lib whois record parser ))
  _SOURCE_DIR    = File.join(_ROOT_DIR, %w( spec fixtures responses ))
  _SOURCE_PARTS  = _SOURCE_DIR.split("/")

  task :generate => :generate_signatures

  task :generate_signatures do
  
    signature_hash = ""
    target_path = File.join(_TARGET_DIR, "signature.rb")
    
    # Loop through the txt files
    Dir["#{SOURCE_DIR}/**/*.expected"].each do |source_path|
      parts = (source_path.split("/") - SOURCE_PARTS)
      khost = parts.first
      kfile = parts.last.gsub(".expected","")

      txt_path = source_path.gsub(".expected", ".txt")
      lines = File.open(txt_path, "r:UTF-8")
      keywords = Set.new()
      lines.each do |line|
        # Extract the part before colon character
        if match = line.match(/^([^:]+)\s*:/)
          keywords.add(match[1].strip())
        end
      end

      # For better quality, we only consider those with more than 5 keywords.
      # This number is very subjective to the author, one might want to change
      # it to improve the guess.
      #
      if keywords.count() > 5
        signature_hash += "        \"#{khost}__#{kfile}\" => #{keywords.to_a.sort().to_s},\n"
      end
    end

    signature = <<-RUBY
# encoding: utf-8

# This file is autogenerated. Do not edit it manually.
# If you want regenerate the content of this file, please
# update the txt files under 
#
#  /spec/fixtures/responses
# 
# then run following rake task
#
#   $ rake signature:generate
#
class Signature
  @@signatures = {
#{signature_hash} 
  }

  def self.signatures
    @@signatures
  end
end
    RUBY
    File.write(target_path, signature)
  end
end